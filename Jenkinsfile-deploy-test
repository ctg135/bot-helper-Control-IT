#! groovy

pipeline {
    agent any
    options {
        timestamps()
    }
    environment { 
        CONTAINER = "kitsab_bot_test"
        FOLDER_DB = "/app/db/requests.db"
        FOLDER_BACKUP = "/tmp/requests.db"
    }
    stages {
        stage('Setting up docker compose'){
            steps {
                script {
                    echo '**** Setting up docker compose ****'
                    withCredentials([string(credentialsId: 'tg_token_bot_test', variable: 'TOKENBOT')]) {
                        sh "sed -i -e 's/TOKEN_BOT_EXAMPLE/${TOKENBOT}/g' 'docker-compose-test.yml'"
                    }
                    withCredentials([string(credentialsId: 'tg_user_id_kit_admin', variable: 'ADMINCHAT')]) {
                        sh "sed -i -e 's/ADMIN_CHAT_EXAMPLE/${ADMINCHAT}/g' 'docker-compose-test.yml'"
                    }
                }
            }
        }
        stage('Running docker container'){
            steps {
                script {
                    echo '**** Turning off running container ****'
                    try {
                        sh 'docker stop ${CONTAINER}'
                        sh 'docker rm ${CONTAINER}'
                    } catch (err) {
                        echo: 'caught error: $err'
                    }
                    echo '**** Running container ****'
                    sh 'docker compose --file "docker-compose-test.yml" up -d'
                }
            }
        }
    }
}